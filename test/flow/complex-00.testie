%require
click-buildtool provides flow ctx !dpdk

%script
click COMPLEX

%expect stderr
lb :: FlowNAPTLoadBalancer has 4 routes and 4 sources
LookupIPRouteMP alignment: {{.*}}
Placing  r1/arpr/iparp :: CTXDispatcher at [4-7]
Placing  r1/inc :: CTXDispatcher at [8-11]
Placing  r1/arpr/arptype :: CTXDispatcher at [8-11]
Placing  istcp :: CTXDispatcher at [12-15]
Placing  r1/icmptype :: CTXDispatcher at [12-15]
Placing  ipoutfd :: CTXDispatcher at [16-19]
Placing  lb :: FlowNAPTLoadBalancer at [20-67]
Table of r1/CTXManager@4 after optimization :
---
12/FFFF (THREECASE, 2 children)
|-> 1544
|  20/FFFF (THREECASE, 2 children)
|  |-> 512 UC:{{0|1}} ED:0 (data 000200000100000001000000000000000000000000000000000000000000)
|  |-> 256 UC:{{0|1}} ED:0 (data 000100000100000000000000000000000000000000000000000000000000)
|  |-> DEFAULT 0 UC:{{0|1}} ED:0 (data 000000000100000002000000000000000000000000000000000000000000)
|-> 8
|  23/FF (THREECASE, 2 children)
|  |-> 6
|  |  36/FFFF (TWOCASE, 1 children)
|  |  |-> 20480
|  |  |  26/FFFFFFFF (HASH-2053, 0 children, dynamic)
|  |  |  |-> DEFAULT
|  |  |  |  30/FFFFFFFF (HASH-2053, 0 children, dynamic)
|  |  |  |  |-> DEFAULT
|  |  |  |  |  34/FFFF (HASH-2053, 0 children, dynamic)
|  |  |  |  |  |-> DEFAULT 4294967295 UC:{{0|1}} ED:0 (data ffffffff0000000001000000000000000000000000000000000000000000)
|  |  |-> DEFAULT 0 UC:{{0|1}} ED:1 (data 00000000000000000100000000000000ffffffff00000000000000000000)
|  |-> 1
|  |  34/FF (TWOCASE, 1 children)
|  |  |-> 8 UC:{{0|1}} ED:0 (data 080000000000000000000000000000000000000000000000000000000000)
|  |  |-> DEFAULT 0 UC:{{0|1}} ED:0 (data 000000000000000000000000010000000000000000000000000000000000)
|  |-> DEFAULT 0 UC:{{0|1}} ED:0 (data 000000000000000002000000000000000000000000000000000000000000)
|-> DEFAULT 0 UC:{{0|1}} ED:0 (data 000000000200000000000000000000000000000000000000000000000000)
---


%file COMPLEX
define($IP1 10.200.0.1)
define($MAC1 3c:fd:fe:9e:5c:40)
define($NET1  10.200.0.0/16)
define($RANGE1  10.200.0.0/30)
define($HOST $RANGE1)

define($IP2 10.100.0.1)
define($MAC2 3c:fd:fe:9e:5c:41)
define($NET2  10.100.0.0/16)

define($SERVERIP1 10.100.1.1)
define($SERVERIP2 10.100.2.1)
define($SERVERIP3 10.100.3.1)
define($SERVERIP4 10.100.4.1)

define($SIP1 10.100.1.2)
define($SIP2 10.100.2.2)
define($SIP3 10.100.3.2)
define($SIP4 10.100.4.2)

//Parameters
define($rxverbose 99)
define($txverbose 99)
define($bout 32)
define($ignore 0)

elementclass ARPDispatcher {
        input[0]->
		iparp :: CTXDispatcher(
                        12/0800,
                        12/0806,
                        -)
		iparp[0] -> [0]output
		iparp[1] -> arptype ::CTXDispatcher(20/0001, 20/0002, -)
		iparp[2] -> [3]output

		arptype[0] -> [1]output
		arptype[1] -> [2]output
		arptype[2] -> [3]output
}


elementclass Receiver { $port, $mac, $ip, $range |

    input[0]
    -> arpq :: ARPQuerier($ip, $mac)
    -> etherOUT :: Null

    f::Idle
    -> CTXManager(BUILDER 0, AGGCACHE 0, CACHESIZE 65536,VERBOSE 1, VERBOSE_FCB 1)
    -> arpr :: ARPDispatcher()

    arpr[0]
    -> FlowStrip(14)
    -> receivercheck :: CheckIPHeader(CHECKSUM false)
    -> inc :: CTXDispatcher(9/01, 9/06, -)

    inc[0]
    -> Print("ICMP")
    -> icmptype :: CTXDispatcher(20/08, -)
    -> ICMPPingResponder
    -> arpq


    icmptype[1] -> Print("Unhandled ICMP", -1) -> Discard

    inc[1]
    -> [0]output;


	inc[2]
    -> Unstrip(14)
	-> Discard

    arpr[1]
    -> Print("RX ARP Request $mac", -1)
    -> arpRespIN :: ARPResponder($range $mac)
    -> Print("TX ARP Responding", -1)
    -> etherOUT;

    arpRespIN[1] -> Print("ARP Packet not for $mac") -> Discard

    arpr[2]
    -> Print("RX ARP Response $mac", -1)
    -> [1]arpq;

    arpr[3] -> Print("Unknown packet type IN???",-1) -> Discard();


    etherOUT
    -> t ::  Discard;

}

lb :: FlowNAPTLoadBalancer($SERVERIP1,$SERVERIP2,$SERVERIP3,$SERVERIP4, SIP $SIP1 $SIP2 $SIP3 $SIP4 )
ipOUT :: LookupIPRouteMP($NET1 0,
                    $HOST 1);
r1 :: Receiver(0000:02:00.0,$MAC1,$IP1,$RANGE1) [0] -> ipOUT

ipOUT[0]
-> [0]r1


ipOUT[1]
-> istcp :: CTXDispatcher(9/06, -)
-> ipoutfd ::  CTXDispatcher(22/0050, - drop)
-> lb
-> [0]r1;

istcp[1] -> Print("NON TCP packet to LB !") -> Discard

DriverManager(
                stop);

//#############################

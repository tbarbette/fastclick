%info

Test timewarp functionality.

%script

now () {
    click -e 'Script(print $(now), stop)'
}

a=`now`; click EMPTY ; b=`now`; diff=$(perl -e "print $b - $a")
a=`now`; click X; b=`now`; perl -e "($b - $a - $diff) > 0.45 ? print \"true\n\":print \"false : \", ($b - $a -$diff), \"\n\""
a=`now`; click Y; b=`now`; perl -e "($b - $a - $diff) > 0.20 && ($b - $a - $diff) < 0.40 ? print \"true\n\":print \"false : \", ($b - $a -$diff), \"\n\""
a=`now`; click Z; b=`now`; perl -e "($b - $a - $diff) < 0.40 ? print \"true\n\":print \"false : \", ($b - $a -$diff), \"\n\""
a=`now`; click --simtime X; b=`now`; perl -e "($b - $a - $diff) < 0.1 ? print \"true\n\":print \"false : \", ($b - $a -$diff), \"\n\""

%file EMPTY

Script(stop)

%file X

Script(set a $(now), wait 0.5s, print $(sub $(now) $a), stop)

%file Y

Script(write timewarp 2, set a $(now), wait 0.5s, print $(sub $(now) $a), stop)

%file Z

Script(write timewarp 2, set a $(now), wait 0.25s, write timewarp 1, wait 0.25s, print $(sub $(now) $a), stop)

%expect stdout
0.5{{|[01].*}}
true
0.5{{|[01].*}}
true
0.5{{|[01].*}}
true
0.5{{|[01].*}}
true
